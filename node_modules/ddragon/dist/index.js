"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dd = /** @class */ (function () {
    function Dd(version, language, baseurl) {
        if (version === void 0) { version = '8.9.1'; }
        if (language === void 0) { language = 'en_US'; }
        if (baseurl === void 0) { baseurl = 'https://ddragon.leagueoflegends.com'; }
        var _this = this;
        /**
         * The current League of Legends versions. Use index 0 for latest version.
         */
        this.versions = function () { return _this.baseurl + "/api/versions.json"; };
        this.images = {
            splash: function (name, num) {
                return _this.baseurl + "/cdn/img/champion/splash/" + name + "_" + num + ".jpg";
            },
            loading: function (name, num) {
                return _this.baseurl + "/cdn/img/champion/loading/" + name + "_" + num + ".jpg";
            },
            tile: function (name, num) {
                return _this.baseurl + "/cdn/img/champion/tiles/" + name.toLowerCase() + "_" + num + ".jpg";
            },
            profileicon: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/profileicon/" + full;
            },
            champion: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/champion/" + full;
            },
            passive: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/passive/" + full;
            },
            spell: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/spell/" + full;
            },
            summoner: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/spell/" + full;
            },
            item: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/item/" + full;
            },
            sprite: function (sprite) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/sprite/" + sprite;
            },
            map: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/map/" + full;
            },
            sticker: function (full) {
                return _this.baseurl + "/cdn/" + _this.version + "/img/sticker/" + full;
            },
            rune: function (icon) { return _this.baseurl + "/cdn/img/" + icon; },
        };
        this.data = {
            profileicon: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/profileicon.json";
            },
            champions: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/champion.json";
            },
            championsFull: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/championFull.json";
            },
            champion: function (name) {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "champion/" + name + ".json";
            },
            item: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/item.json";
            },
            summoner: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/summoner.json";
            },
            map: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/map.json";
            },
            runes: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/runesReforged.json";
            },
            language: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/language.json";
            },
            sticker: function () {
                return _this.baseurl + "/cdn/" + _this.version + "/data/" + _this.language + "/sticker.json";
            },
        };
        /**
         * All supported languages. Can be used for setting Ddragon language.
         */
        this.languages = function () { return _this.baseurl + "/cdn/languages.json"; };
        this.version = version;
        this.language = language;
        this.baseurl = baseurl;
    }
    return Dd;
}());
exports.default = Dd;
