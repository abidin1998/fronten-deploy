{"ast":null,"code":"var _jsxFileName = \"/Users/abidin/Desktop/fronten-deploy/src/components/home.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport customData from './champs.json';\nexport default class home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      champions: [],\n      maxmastery: [],\n      championList: [],\n      lista: [],\n      Campeon: [],\n      imagen: [],\n      title: \"\",\n      checked: \"\",\n      historial: [],\n      partida: [],\n      resultado: [],\n      ganador: [],\n      campeoneslista: [],\n      cola: [],\n      kills: [],\n      deads: [],\n      assists: [],\n      colorfondo: [],\n      soloq: \"\",\n      flexq: \"\"\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        console.log('enter press here! ');\n      }\n    };\n  }\n\n  async consultarPartida() {\n    let par = [];\n\n    for (var i = 0; i < 10; i++) {\n      const partida = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/partida/\" + this.state.historial.matches[i].gameId);\n      par.push(partida);\n    }\n\n    this.setState({\n      partida: par\n    });\n    return par;\n  }\n\n  async buscardatos(nombre) {\n    let res = [];\n    let gana = [];\n    this.state.partida.map(result => {\n      result.data.participantIdentities.map(par => {\n        if (par.player.summonerName == nombre) {\n          res.push(result.data.participants[par.participantId - 1]);\n\n          if (result.data.participants[par.participantId - 1].stats.win) {\n            gana.push(\"Victoria\");\n          } else {\n            gana.push(\"Derrota\");\n          }\n        }\n      });\n    });\n    this.setState({\n      ganador: gana\n    });\n    this.setState({\n      resultado: res\n    });\n  }\n\n  async tipocola() {\n    let cola = [];\n\n    for (let index = 0; index < 10; index++) {\n      if (this.state.historial.matches[index].queue == \"440\") {\n        cola.push(\"Clasificatoria Flexible\");\n      }\n\n      if (this.state.historial.matches[index].queue == \"420\") {\n        cola.push(\"Clasificatoria Solo/Duo\");\n      }\n\n      if (this.state.historial.matches[index].queue == \"450\") {\n        cola.push(\"ARAM\");\n      }\n\n      if (this.state.historial.matches[index].queue == \"400\") {\n        cola.push(\"Normal\");\n      }\n    }\n\n    console.log(cola);\n    this.setState({\n      cola: cola\n    });\n  }\n\n  async insertarRutas() {\n    let campeoneslista = [];\n\n    for (let index = 0; index < 10; index++) {\n      this.state.lista.forEach((item, i) => {\n        if (item.key == this.state.resultado[index].championId) {\n          campeoneslista.push(require(\"./dragontail-10.7.1/img/champion/tiles/\" + item.id + \"_0.jpg\"));\n        }\n      });\n    }\n\n    this.setState({\n      campeoneslista: campeoneslista\n    });\n  }\n\n  async kda() {\n    let kills = [];\n    let deads = [];\n    let assists = [];\n    let colorfondo = [];\n\n    for (let index = 0; index < 10; index++) {\n      kills.push(this.state.resultado[index].stats.kills);\n      deads.push(this.state.resultado[index].stats.deaths);\n      assists.push(this.state.resultado[index].stats.assists);\n\n      if (this.state.resultado[index].stats.win) {\n        colorfondo.push(\"card mb-3 border-primary\");\n      } else {\n        colorfondo.push(\"card mb-3 border-danger\");\n      }\n    }\n\n    this.setState({\n      kills: kills\n    });\n    this.setState({\n      deads: deads\n    });\n    this.setState({\n      assists: assists\n    });\n    this.setState({\n      colorfondo: colorfondo\n    });\n  }\n\n  async busqueda(nombre) {\n    const res = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/\" + nombre); // const champs = await axios(\"http://ddragon.leagueoflegends.com/cdn/10.7.1/data/es_ES/champion.json\")\n\n    const champmasterymax = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/maxmastery/\" + res.data.id);\n    const historial = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/historial/\" + res.data.accountId);\n    const perfilinfo = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/info/\" + res.data.id);\n    console.log(perfilinfo);\n    let tier = \"Unranked\";\n    let unranked = {\n      tier\n    };\n\n    if (perfilinfo.data.length == \"0\") {\n      this.setState({\n        soloq: unranked\n      });\n      this.setState({\n        flexq: unranked\n      });\n    } else if (perfilinfo.data.length == \"1\" && perfilinfo.data[0].queueType == \"RANKED_SOLO_5x5\") {\n      this.setState({\n        soloq: perfilinfo.data[0]\n      });\n      this.setState({\n        flexq: unranked\n      });\n    } else if (perfilinfo.data.length == \"1\" && perfilinfo.data[0].queueType == \"RANKED_FLEX_SR\") {\n      this.setState({\n        soloq: unranked\n      });\n      this.setState({\n        flexq: perfilinfo.data[0]\n      });\n    } else if (perfilinfo.data[0].queueType == \"RANKED_SOLO_5x5\" && perfilinfo.data[1].queueType == \"RANKED_FLEX_SR\") {\n      this.setState({\n        soloq: perfilinfo.data[0]\n      });\n      this.setState({\n        flexq: perfilinfo.data[1]\n      });\n    } else if (perfilinfo.data[0].queueType == \"RANKED_FLEX_SR\" && perfilinfo.data[1].queueType == \"RANKED_SOLO_5x5\") {\n      this.setState({\n        flexq: perfilinfo.data[0]\n      });\n      this.setState({\n        soloq: perfilinfo.data[1]\n      });\n    } else {}\n\n    this.setState({\n      users: res.data\n    });\n    this.setState({\n      champions: customData\n    });\n    this.setState({\n      maxmastery: champmasterymax.data[0].championId\n    });\n    this.setState({\n      championList: this.state.champions.data\n    });\n    this.setState({\n      historial: historial.data\n    });\n    const url = 'http://ddragon.leagueoflegends.com/cdn/10.7.1/data/es_ES/champion.json';\n    let dataSource = [];\n    Object.values(customData.data).forEach(item => {\n      dataSource = dataSource.concat(item);\n    });\n    this.setState({\n      lista: dataSource\n    });\n    this.state.lista.forEach((item, i) => {\n      if (item.key == this.state.maxmastery) {\n        return this.setState({\n          Campeon: item\n        });\n      }\n    });\n    this.setState({\n      imagen: require(\"./dragontail-10.7.1/img/champion/splash/\" + this.state.Campeon.id + \"_0.jpg\")\n    });\n    await this.consultarPartida();\n    await this.buscardatos(this.state.users.name);\n    await this.insertarRutas();\n    await this.tipocola();\n    await this.kda();\n    console.log(this.state.kda);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, \"Buscador\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Nombre de invocador\",\n      onChange: this.onInputChange,\n      onKeyPress: event => {\n        if (event.key === \"Enter\") {\n          this.busqueda(this.state.title);\n          this.state.checked = \"false\";\n        }\n      },\n      name: \"title\",\n      value: this.state.title,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      hidden: this.state.checked ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imagen,\n      className: \"card-img-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, this.state.users.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }, \"Nivel \", this.state.users.summonerLevel), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, \"Solo/Duo: \", this.state.soloq.tier, \" \", this.state.soloq.rank, \",  \", this.state.soloq.leaguePoints, \" Lp\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, \"Flexible: \", this.state.flexq.tier, \" \", this.state.flexq.rank, \",  \", this.state.flexq.leaguePoints, \" Lp\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 54\n      }\n    }, this.state.Campeon.title)))), this.state.partida.length != 10 ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 56\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, location.reload(), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }, \"Loading...\"))) : this.state.partida.map((result, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.state.colorfondo[index],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.campeoneslista[index],\n        className: \"card-img\",\n        alt: \"...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 45\n        }\n      }, this.state.ganador[index]), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 45\n        }\n      }, this.state.cola[index], \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 95\n        }\n      }), \" \", this.state.kills[index], \"/\", this.state.deads[index], \"/\", this.state.assists[index]), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 70\n        }\n      }, \"Last updated 3 mins ago\"))))));\n      this.setState({\n        partida: null\n      });\n    }), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"pt-4 my-md-5 pt-md-5 border-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"d-block mb-3 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }, \"\\xA9 2017-2019\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 col-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, \"Features\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"text-muted\",\n      href: \"http://localhost:3000/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 41\n      }\n    }, \"Cool stuff\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 col-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }, \"Resources\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"text-muted\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 41\n      }\n    }, \"Resource\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 col-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 33\n      }\n    }, \"About\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"text-muted\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 41\n      }\n    }, \"Team\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/abidin/Desktop/fronten-deploy/src/components/home.js"],"names":["React","Component","axios","customData","home","state","users","champions","maxmastery","championList","lista","Campeon","imagen","title","checked","historial","partida","resultado","ganador","campeoneslista","cola","kills","deads","assists","colorfondo","soloq","flexq","onInputChange","e","setState","target","name","value","handleKeyPress","event","key","console","log","consultarPartida","par","i","matches","gameId","push","buscardatos","nombre","res","gana","map","result","data","participantIdentities","player","summonerName","participants","participantId","stats","win","tipocola","index","queue","insertarRutas","forEach","item","championId","require","id","kda","deaths","busqueda","champmasterymax","accountId","perfilinfo","tier","unranked","length","queueType","url","dataSource","Object","values","concat","render","summonerLevel","rank","leaguePoints","location","reload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\"\nimport customData from './champs.json';\nexport default class home extends Component {\n\n    state = {\n        users: [\n        ],\n        champions: [\n        ],\n        maxmastery: [\n        ],\n        championList: [\n        ],\n        lista: [],\n        Campeon: [],\n        imagen: [],\n        title: \"\",\n        checked: \"\",\n        historial: [],\n        partida: [],\n        resultado: [],\n        ganador: [],\n        campeoneslista: [],\n        cola: [],\n        kills: [],\n        deads: [],\n        assists: [],\n        colorfondo: [],\n        soloq: \"\",\n        flexq: \"\",\n\n    }\n\n    async consultarPartida() {\n        let par = [];\n        for (var i = 0; i < 10; i++) {\n            const partida = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/partida/\" + this.state.historial.matches[i].gameId)\n            par.push(partida)\n        }\n        this.setState({ partida: par })\n        return par\n    }\n\n    async buscardatos(nombre) {\n\n        let res = [];\n        let gana = [];\n        this.state.partida.map(result => {\n            result.data.participantIdentities.map(par => {\n                if (par.player.summonerName == nombre) {\n                    res.push(result.data.participants[(par.participantId - 1)])\n                    if (result.data.participants[(par.participantId - 1)].stats.win) {\n                        gana.push(\"Victoria\")\n                    } else {\n                        gana.push(\"Derrota\")\n                    }\n                }\n\n            })\n        })\n        this.setState({ ganador: gana })\n        this.setState({ resultado: res })\n    }\n\n    async tipocola() {\n        let cola = []\n\n        for (let index = 0; index < 10; index++) {\n            if (this.state.historial.matches[index].queue == \"440\") {\n                cola.push(\"Clasificatoria Flexible\")\n            }\n            if (this.state.historial.matches[index].queue == \"420\") {\n                cola.push(\"Clasificatoria Solo/Duo\")\n            }\n            if (this.state.historial.matches[index].queue == \"450\") {\n                cola.push(\"ARAM\")\n            }\n            if (this.state.historial.matches[index].queue == \"400\") {\n                cola.push(\"Normal\")\n            }\n\n\n        }\n        console.log(cola);\n\n        this.setState({ cola: cola })\n    }\n\n    async insertarRutas() {\n        let campeoneslista = []\n        for (let index = 0; index < 10; index++) {\n            this.state.lista.forEach((item, i) => {\n                if (item.key == this.state.resultado[index].championId) {\n                    campeoneslista.push(require(\"./dragontail-10.7.1/img/champion/tiles/\" + item.id + \"_0.jpg\"))\n                }\n            })\n\n        }\n\n        this.setState({ campeoneslista: campeoneslista });\n    }\n\n    async kda() {\n        let kills = [];\n        let deads = [];\n        let assists = [];\n        let colorfondo = [];\n        for (let index = 0; index < 10; index++) {\n            kills.push(this.state.resultado[index].stats.kills)\n            deads.push(this.state.resultado[index].stats.deaths)\n            assists.push(this.state.resultado[index].stats.assists)\n            if (this.state.resultado[index].stats.win) {\n                colorfondo.push(\"card mb-3 border-primary\")\n            }\n            else {\n                colorfondo.push(\"card mb-3 border-danger\")\n            }\n\n        }\n        this.setState({ kills: kills })\n        this.setState({ deads: deads })\n        this.setState({ assists: assists })\n        this.setState({ colorfondo: colorfondo })\n    }\n\n    async busqueda(nombre) {\n        const res = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/\" + nombre)\n        // const champs = await axios(\"http://ddragon.leagueoflegends.com/cdn/10.7.1/data/es_ES/champion.json\")\n        const champmasterymax = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/maxmastery/\" + res.data.id)\n        const historial = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/historial/\" + res.data.accountId)\n        const perfilinfo = await axios(\"https://servidor-rest-op.herokuapp.com/perfil/info/\" + res.data.id)\n        console.log(perfilinfo);\n        let tier = \"Unranked\"\n        let unranked = { tier }\n        if (perfilinfo.data.length == \"0\") {\n            this.setState({ soloq: unranked })\n            this.setState({ flexq: unranked })\n        } else if (perfilinfo.data.length == \"1\" && perfilinfo.data[0].queueType == \"RANKED_SOLO_5x5\") {\n            this.setState({ soloq: perfilinfo.data[0] })\n            this.setState({ flexq: unranked })\n        }\n        else if (perfilinfo.data.length == \"1\" && perfilinfo.data[0].queueType == \"RANKED_FLEX_SR\") {\n            this.setState({ soloq: unranked })\n            this.setState({ flexq: perfilinfo.data[0] })\n        }\n        else if (perfilinfo.data[0].queueType == \"RANKED_SOLO_5x5\" && perfilinfo.data[1].queueType == \"RANKED_FLEX_SR\") {\n            this.setState({ soloq: perfilinfo.data[0] })\n            this.setState({ flexq: perfilinfo.data[1] })\n        } else if (perfilinfo.data[0].queueType == \"RANKED_FLEX_SR\" && perfilinfo.data[1].queueType == \"RANKED_SOLO_5x5\") {\n            this.setState({ flexq: perfilinfo.data[0] })\n            this.setState({ soloq: perfilinfo.data[1] })\n        } else {\n        }\n\n        this.setState({ users: res.data })\n        this.setState({ champions: customData })\n        this.setState({ maxmastery: champmasterymax.data[0].championId })\n        this.setState({ championList: this.state.champions.data })\n        this.setState({ historial: historial.data })\n\n        const url = 'http://ddragon.leagueoflegends.com/cdn/10.7.1/data/es_ES/champion.json'\n\n        let dataSource = [];\n\n        Object.values(customData.data).forEach(item => {\n            dataSource = dataSource.concat(item);\n        });\n\n        this.setState({ lista: dataSource })\n\n        this.state.lista.forEach((item, i) => {\n            if (item.key == this.state.maxmastery) {\n                return this.setState({ Campeon: item });\n            }\n        })\n        this.setState({ imagen: require(\"./dragontail-10.7.1/img/champion/splash/\" + this.state.Campeon.id + \"_0.jpg\") })\n\n        await this.consultarPartida()\n\n        await this.buscardatos(this.state.users.name)\n\n        await this.insertarRutas()\n\n        await this.tipocola()\n\n        await this.kda()\n\n        console.log(this.state.kda);\n\n    }\n    onInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            console.log('enter press here! ')\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <h1>Buscador</h1>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Nombre de invocador\"\n                        onChange={this.onInputChange}\n                        onKeyPress={(event) => {\n                            if (event.key === \"Enter\") {\n                                this.busqueda(this.state.title)\n                                this.state.checked = \"false\";\n                            }\n                        }}\n                        name=\"title\"\n                        value={this.state.title}\n                        required />\n                </div>\n                <br></br>\n                <div className=\"container\" hidden={this.state.checked ? false : true}>\n                    <div className=\"card mb-3\">\n\n                        <img src={this.state.imagen} className=\"card-img-top\" />\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{this.state.users.name}</h5>\n                            <p className=\"card-text\">Nivel {this.state.users.summonerLevel}</p>\n                            <p className=\"text-primary\">Solo/Duo: {(this.state.soloq.tier)} {(this.state.soloq.rank)},  {this.state.soloq.leaguePoints} Lp</p>\n                            <p className=\"text-primary\">Flexible: {(this.state.flexq.tier)} {(this.state.flexq.rank)},  {this.state.flexq.leaguePoints} Lp</p>\n                            <p className=\"card-text\"><small className=\"text-muted\">{this.state.Campeon.title}</small></p>\n                        </div>\n                    </div>\n                    {this.state.partida.length != 10 ? <div class=\"d-flex justify-content-center\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            {location.reload()}\n                            <span class=\"sr-only\">Loading...</span>\n                        </div>\n                    </div> : this.state.partida.map((result, index) => {\n                        return (\n                            <div className={this.state.colorfondo[index]}>\n                                <div className=\"row no-gutters\">\n                                    <div className=\"col-md-4\">\n                                        <img src={this.state.campeoneslista[index]} className=\"card-img\" alt=\"...\"></img>\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{this.state.ganador[index]}</h5>\n                                            <p className=\"card-text\">{this.state.cola[index]} <br></br> {this.state.kills[index]}/\n                                        {this.state.deads[index]}/{this.state.assists[index]}</p>\n                                            <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                        this.setState({ partida: null })\n                    })\n                    }\n\n\n\n                    <footer className=\"pt-4 my-md-5 pt-md-5 border-top\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-md\">\n                                <small className=\"d-block mb-3 text-muted\">© 2017-2019</small>\n                            </div>\n                            <div className=\"col-6 col-md\">\n                                <h5>Features</h5>\n                                <ul className=\"list-unstyled text-small\">\n                                    <li><a className=\"text-muted\" href=\"http://localhost:3000/login\">Cool stuff</a></li>\n                                </ul>\n                            </div>\n                            <div className=\"col-6 col-md\">\n                                <h5>Resources</h5>\n                                <ul className=\"list-unstyled text-small\">\n                                    <li><a className=\"text-muted\" href=\"#\">Resource</a></li>\n                                </ul>\n                            </div>\n                            <div className=\"col-6 col-md\">\n                                <h5>About</h5>\n                                <ul className=\"list-unstyled text-small\">\n                                    <li><a className=\"text-muted\" href=\"#\">Team</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}